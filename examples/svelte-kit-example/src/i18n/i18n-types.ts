// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType } from 'typesafe-i18n'
import type { LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'da'
	| 'de'
	| 'en'
	| 'fr'
	| 'nl'

export type Translation = {
	'index': {	
		/**
		 * Inlang is in early alpha
		 */
		'alpha': string
		/**
		 * Community
		 */
		'community': string
		/**
		 * enter your name
		 */
		'enterName': string
		/**
		 * Select a language: 
		 */
		'selectLanguage': string
		/**
		 * ⭐ Star inlang on GitHub
		 */
		'star': string
		/**
		 * My name is {name} and my favorite color is {color}.
		 * @param {unknown} color
		 * @param {unknown} name
		 */
		'nameAndColor': RequiredParams2<'color', 'name'>
		/**
		 * blue
		 */
		'blue': string
		/**
		 * 1. This card is already localized by us
		 */
		'card': string
		/**
		 * green
		 */
		'green': string
		/**
		 * What is your name?
		 */
		'name': string
		/**
		 * orange
		 */
		'orange': string
		/**
		 * red
		 */
		'red': string
		/**
		 * Every feedback we get helps us tremendously.
		 */
		'feedback': string
		/**
		 * Do you have feedback on this example?
		 */
		'giveFeedback': string
		/**
		 * What is your favorite color?
		 */
		'favoriteColor': string
	}
	/**
	 * Welcome to the inlang example
	 */
	'welcome': string
}

export type TranslationFunctions = {
	'index': {	
		/**
		 * Inlang is in early alpha
		 */
		'alpha': () => LocalizedString
		/**
		 * Community
		 */
		'community': () => LocalizedString
		/**
		 * enter your name
		 */
		'enterName': () => LocalizedString
		/**
		 * Select a language: 
		 */
		'selectLanguage': () => LocalizedString
		/**
		 * ⭐ Star inlang on GitHub
		 */
		'star': () => LocalizedString
		/**
		 * My name is {name} and my favorite color is {color}.
		 */
		'nameAndColor': (arg: { color: unknown, name: unknown }) => LocalizedString
		/**
		 * blue
		 */
		'blue': () => LocalizedString
		/**
		 * 1. This card is already localized by us
		 */
		'card': () => LocalizedString
		/**
		 * green
		 */
		'green': () => LocalizedString
		/**
		 * What is your name?
		 */
		'name': () => LocalizedString
		/**
		 * orange
		 */
		'orange': () => LocalizedString
		/**
		 * red
		 */
		'red': () => LocalizedString
		/**
		 * Every feedback we get helps us tremendously.
		 */
		'feedback': () => LocalizedString
		/**
		 * Do you have feedback on this example?
		 */
		'giveFeedback': () => LocalizedString
		/**
		 * What is your favorite color?
		 */
		'favoriteColor': () => LocalizedString
	}
	/**
	 * Welcome to the inlang example
	 */
	'welcome': () => LocalizedString
}

export type Formatters = {}

type Param<P extends string> = `{${P}}`

type Params2<P1 extends string, P2 extends string> =
	`${string}${Param<P1>}${string}${Param<P2>}${string}`

type RequiredParams2<P1 extends string, P2 extends string> =
	| Params2<P1, P2>
	| Params2<P2, P1>
